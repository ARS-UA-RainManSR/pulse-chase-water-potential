#model - PD only, Dmean,  two depths

model{
  for(i in 1:N){
    # Likelihood
    wp[i] ~ dnorm(mu[i], tau)
    # Replicated data
    wp.rep[i] ~ dnorm(mu[i], tau)
    
    mu[i] = B[1] + 
      B[2] * D[i] +
      B[3] * W1[i] +
      B[4] * W2[i] +
      B[5] * D[i] * W1[i] +
      B[6] * D[i] * W2[i] +
      B[7] * W1[i] * W2[i] +
      Eps[house[i]]
    
    
    # Part of the calculation of the posterior predictive loss	
    Sqdiff[i] <- pow(wp.rep[i] - wp[i], 2)
  }
  
  for(j in 1:Nparam) { 
    # Parameter priors
    B[j] ~ dnorm(0, 0.001)
    
    # Identifiable regression params
    Bstar[j] <- B[j] + equals(j, 1) * mean.eps
  }
  
  for(k in 1:Nhouse) {
    # House random effects
    Eps[k] ~ dnorm(0, tau.eps)
    
    # Identifiable random effects via post-sweeping
    Estar[k] <- Eps[k] - mean.eps
  }
  
  # Mean random effect for post-sweeping
  mean.eps <- mean(Eps[])
  
  # Folded T prior for among-house standard deviation
  sig.eps.a ~ dt(0, Ta, 2) # temp SD from a T distribution
  sig.eps <- abs(sig.eps.a) # Fold to make positive only
  tau.eps <- pow(sig.eps, -2) # Convert to precision
  Ta <- pow(Sa, -2) # Set as data, among-house SD
  
  # Unifor prior for among-house standard deviation
  #sig.eps ~ dunif(0, 1)
  #tau.eps <- pow(sig.eps, -2)
  
  # priors for observation variance
  tau ~ dgamma(0.01, 0.01)
  sig <- pow(tau, -0.5)
  
  # Posterior predictive loss is the posterior mean of Dsum
  Dsum <- sum(Sqdiff[])
  
}